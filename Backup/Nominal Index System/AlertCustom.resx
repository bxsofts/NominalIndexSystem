<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="reflectionImage1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>